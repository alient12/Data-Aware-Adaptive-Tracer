#!/usr/bin/env bpftrace

uprobe:/home/alient/.phoronix-test-suite/installed-tests/pts/openssl-3.3.0/openssl-3.3.0/libcrypto.so.3:EVP_EncryptUpdate
{
    if (arg4 >= 64 && arg4 <= 1024)
    {
        $t = nsecs(monotonic);
        @count0_EVP_EncryptUpdate[comm, pid, tid, arg0, arg1, arg2, arg3, arg4] = count();
        @stack0_EVP_EncryptUpdate[comm, pid, tid, $t, arg0, arg1, arg2, arg3, arg4] = ustack;
        @args0_EVP_EncryptUpdate[0] = arg0;
        @args0_EVP_EncryptUpdate[1] = arg1;
        @args0_EVP_EncryptUpdate[2] = arg2;
        @args0_EVP_EncryptUpdate[3] = arg3;
        @args0_EVP_EncryptUpdate[4] = arg4;
        @flag0_EVP_EncryptUpdate[comm, pid, tid] = 1;
    }
}


uretprobe:/home/alient/.phoronix-test-suite/installed-tests/pts/openssl-3.3.0/openssl-3.3.0/libcrypto.so.3:EVP_EncryptUpdate
{
    if (@flag0_EVP_EncryptUpdate[comm, pid, tid] == 1)
    {
        $t = nsecs(monotonic);
        @flag0_EVP_EncryptUpdate[comm, pid, tid] = 0;
        @ret0_EVP_EncryptUpdate[comm, pid, tid, $t, @args0_EVP_EncryptUpdate[0], @args0_EVP_EncryptUpdate[1], @args0_EVP_EncryptUpdate[2], @args0_EVP_EncryptUpdate[3], @args0_EVP_EncryptUpdate[4]] = retval;
    }
}


BEGIN
{
    @args0_EVP_EncryptUpdate[0] = 0;
}


interval:s:5
{
    print(@count0_EVP_EncryptUpdate);clear(@count0_EVP_EncryptUpdate);
    print(@stack0_EVP_EncryptUpdate);clear(@stack0_EVP_EncryptUpdate);
    print(@ret0_EVP_EncryptUpdate);clear(@ret0_EVP_EncryptUpdate);
    exit();
}
